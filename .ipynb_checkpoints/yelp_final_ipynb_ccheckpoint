{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2d35b8db",
   "metadata": {},
   "source": [
    "# Sentiment Analysis on Yelp Open Dataset for Review Classification"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96cfcc62",
   "metadata": {},
   "source": [
    "Il notebook seguente andrà ad illustrare l'intero processo per l'implementazione di un modello di Sentiment Analysis in grado di classificare le reviews in positive o negative tramite l'uso di modelli di Deep Learning."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77beb0bf",
   "metadata": {},
   "source": [
    "### Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "9816f0aa",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package averaged_perceptron_tagger to\n",
      "[nltk_data]     /Users/kode/nltk_data...\n",
      "[nltk_data]   Package averaged_perceptron_tagger is already up-to-\n",
      "[nltk_data]       date!\n",
      "[nltk_data] Downloading package wordnet to /Users/kode/nltk_data...\n",
      "[nltk_data]   Package wordnet is already up-to-date!\n"
     ]
    }
   ],
   "source": [
    "# data collections\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# data analysis\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from wordcloud import WordCloud\n",
    "%matplotlib inline\n",
    "\n",
    "# text manipulation\n",
    "import gensim\n",
    "from gensim.parsing.preprocessing import remove_stopwords\n",
    "import nltk as nltk\n",
    "from nltk.tokenize import word_tokenize\n",
    "from nltk.probability import FreqDist\n",
    "from nltk.corpus import wordnet\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "import nltk\n",
    "nltk.download('averaged_perceptron_tagger')\n",
    "nltk.download('wordnet')\n",
    "\n",
    "# dataset manipulation\n",
    "from collections import Counter, defaultdict\n",
    "from datetime import datetime\n",
    "from keras.preprocessing.text import Tokenizer\n",
    "from keras.preprocessing.sequence import pad_sequences\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import f1_score\n",
    "\n",
    "# data modelling\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras import layers\n",
    "import tensorflow_addons as tfa\n",
    "\n",
    "\n",
    "# save models\n",
    "from keras.models import load_model\n",
    "from keras.preprocessing.sequence import pad_sequences\n",
    "import pickle"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "787e548f",
   "metadata": {},
   "source": [
    "## 1. Data Loading"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b0e9e55",
   "metadata": {},
   "source": [
    "Date le grandezze eccessive del dataset di input, si è deciso di caricare i dati al suo interno tramite la divisione in blocchi di grandezza pari a chunksize. Inoltre, tramite la documentazione fornita da Yelp, siamo stati in grado di tener conto del numero di byte da caricare grazie alla nota tipizzazione delle informazioni."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "de54f167",
   "metadata": {},
   "outputs": [],
   "source": [
    "# definiamo i tipi degli attributi JSON per l'attributo dtype di read_json\n",
    "rtypes = {  \"review_id\": str,\n",
    "            \"user_id\":str,\n",
    "            \"business_id\":str,\n",
    "            \"stars\": np.float16, \n",
    "            \"useful\": np.int32, \n",
    "            \"funny\": np.int32,\n",
    "            \"cool\": np.int32,\n",
    "            \"text\" : str,\n",
    "           }\n",
    "\n",
    "# file path del dataset json\n",
    "path = './data/yelp_academic_dataset_review.json'\n",
    "\n",
    "# grandezza dei chunk\n",
    "chunkSize = 10000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3fe4db53",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1min 26s, sys: 14.8 s, total: 1min 41s\n",
      "Wall time: 1min 41s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "# creazione del JsonReader\n",
    "review = pd.read_json(path, lines=True,\n",
    "                      orient=\"records\",\n",
    "                      dtype=rtypes,\n",
    "                      chunksize=chunkSize)\n",
    "chunkList = []\n",
    "\n",
    "# utilizzo della segmentazione in chunk per creare dal JsonReader il dataframe\n",
    "for chunkReview in review:\n",
    "    # rimozione degli attributi id\n",
    "    chunkReview = chunkReview.drop(['review_id', 'user_id','business_id'], axis=1)\n",
    "    chunkList.append(chunkReview)\n",
    "    \n",
    "# concatenazione degli elementi nella chunkList per righe\n",
    "df = pd.concat(chunkList, ignore_index=True, axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1102210d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stars</th>\n",
       "      <th>useful</th>\n",
       "      <th>funny</th>\n",
       "      <th>cool</th>\n",
       "      <th>text</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Apparently Prides Osteria had a rough summer a...</td>\n",
       "      <td>2014-10-11 03:34:02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>This store is pretty good. Not as great as Wal...</td>\n",
       "      <td>2015-07-03 20:38:25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>I called WVM on the recommendation of a couple...</td>\n",
       "      <td>2013-05-28 20:38:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>I've stayed at many Marriott and Renaissance M...</td>\n",
       "      <td>2010-01-08 02:29:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>The food is always great here. The service fro...</td>\n",
       "      <td>2011-07-28 18:05:01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   stars  useful  funny  cool  \\\n",
       "0    4.0       3      1     1   \n",
       "1    4.0       1      0     0   \n",
       "2    5.0       0      0     0   \n",
       "3    2.0       1      1     1   \n",
       "4    4.0       0      0     0   \n",
       "\n",
       "                                                text                date  \n",
       "0  Apparently Prides Osteria had a rough summer a... 2014-10-11 03:34:02  \n",
       "1  This store is pretty good. Not as great as Wal... 2015-07-03 20:38:25  \n",
       "2  I called WVM on the recommendation of a couple... 2013-05-28 20:38:06  \n",
       "3  I've stayed at many Marriott and Renaissance M... 2010-01-08 02:29:15  \n",
       "4  The food is always great here. The service fro... 2011-07-28 18:05:01  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# visualizzazione degli elementi in testa\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6835a436",
   "metadata": {},
   "source": [
    "## 2. Data Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca906c7e",
   "metadata": {},
   "source": [
    "Durante la fase di Data Analysis, abbiamo concentrato il nostro interesse interesse sul bilanciamento delle valutazioni relative alla colonna stars, possibili correlazioni tra le colonne numeriche secondarie (cool, funny, useful) e analisi sulle frequenze di parole e lunghezze dei testi per la colonna texts."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "791a1d83",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 8635403 entries, 0 to 8635402\n",
      "Data columns (total 6 columns):\n",
      " #   Column  Dtype         \n",
      "---  ------  -----         \n",
      " 0   stars   float16       \n",
      " 1   useful  int32         \n",
      " 2   funny   int32         \n",
      " 3   cool    int32         \n",
      " 4   text    object        \n",
      " 5   date    datetime64[ns]\n",
      "dtypes: datetime64[ns](1), float16(1), int32(3), object(1)\n",
      "memory usage: 247.1+ MB\n"
     ]
    }
   ],
   "source": [
    "# informazioni sulle colonne del dataframe e su quante entries o righe si hanno\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "905d3170",
   "metadata": {},
   "source": [
    "### 2.1 Stars Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fb555473",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, \"Distribuzione dei valori per l'attributo stars\")"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# definire la grandezza della figura\n",
    "plt.figure(figsize=(8,8))\n",
    "\n",
    "# contare i vari valori di stars e visualizzarli su un diagramma a torta\n",
    "df['stars'].value_counts().plot.pie(startangle=60)\n",
    "\n",
    "# definire il titolo del plot\n",
    "plt.title('Distribuzione dei valori per l\\'attributo stars')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c08912e",
   "metadata": {},
   "source": [
    "Le quantità di recensioni, classificate in base al numero di stelle assegnate, è sbilanciata. Si ha un maggior numero per le recensioni con 5 e 4 stelle rispetto a quelle con 1, 2 o 3 stelle."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "26dd9c32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Distribuzione dei valori positivi e negativi')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# distribuzione dei valori in reviews positive e negative\n",
    "binstars = pd.DataFrame()\n",
    "binstars['stars'] = [0 if star <= 3.0 else 1 for star in df['stars']]\n",
    "# definire la grandezza della figura\n",
    "plt.figure(figsize=(8,8))\n",
    "\n",
    "\n",
    "# contare i vari valori di stars e visualizzarli su un diagramma a torta\n",
    "binstars['stars'].value_counts().plot.pie(startangle=60)\n",
    "\n",
    "# definire il titolo del plot\n",
    "plt.title('Distribuzione dei valori positivi e negativi')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7315455f",
   "metadata": {},
   "source": [
    "### 2.2 Cool, Fun and Useful Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8d714e8a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Aggiunta di una feature per l'analisi della lunghezza dei testi\n",
    "df['textLength']  = df['text'].str.len()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "63264560",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# definire le correlazioni\n",
    "corr = df.corr()\n",
    "\n",
    "# generazione dell'heatmap\n",
    "sns.heatmap(corr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "008f57a4",
   "metadata": {},
   "source": [
    "Non sono presenti particolari correlazioni forti tra i funny, useful e cool con i valori dati a stars o text."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "084367cf",
   "metadata": {},
   "source": [
    "### 2.3 Text Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0ab1bd9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 20.6 s, sys: 822 ms, total: 21.4 s\n",
      "Wall time: 21.4 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "# definisce un sottoinsieme delle righe del dataset\n",
    "subset = df[:100000]\n",
    "# concatenazione dei testi di ogni riga in una singola stringa\n",
    "inputText = ' '.join(subset['text']).lower()\n",
    "\n",
    "# creazione di un wordcloud andando ad ignorare le stopwords\n",
    "wordCloud = WordCloud(background_color='white', stopwords=gensim.parsing.preprocessing.STOPWORDS).generate(inputText)\n",
    "# setting della visualizzazione utilizzando una interpolazione bilineare\n",
    "plt.imshow(wordCloud, interpolation='bilinear')\n",
    "\n",
    "# rimozione degli assi\n",
    "plt.axis('off')\n",
    "# visualizzazione del wordcloud rappresentante le parole più usate nel testo di una recensione\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "199ba73b",
   "metadata": {},
   "source": [
    "Poichè la maggior parte delle recensioni fanno riferimento ad attività che forniscono servizi (ristorazione o di altro genere), l'utilizzo di parole che possano descrivere il luogo o i vari aspetti dell'attività sono quelle riscontrate con più frequenza."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7ceabfac",
   "metadata": {},
   "outputs": [],
   "source": [
    "# calcolo della frequenza dei termini più utilizzati\n",
    "wordTokens = word_tokenize(inputText)\n",
    "tokens = list()\n",
    "for word in wordTokens:\n",
    "    if word.isalpha() and word not in gensim.parsing.preprocessing.STOPWORDS:\n",
    "        tokens.append(word)\n",
    "tokenDist = FreqDist(tokens)\n",
    "# per questioni di visualizzazione, andiamo a prendere solamente i primi 20 termini utilizzati\n",
    "dist = pd.DataFrame(tokenDist.most_common(20),columns=['term', 'freq'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "00b4f358",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1008x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rappresentazione grafica dei risultati\n",
    "fig = plt.figure(figsize=(14,8))\n",
    "ax = fig.add_axes([0,0,1,1])\n",
    "x = dist['term']\n",
    "y = dist['freq']\n",
    "ax.bar(x,y)\n",
    "plt.title('Frequenza dei termini più utilizzati')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7edef1df",
   "metadata": {},
   "source": [
    "Tramite il grafico delle frequenze, possiamo notare come la maggior parte delle recensioni sono di natura culinaria, ossia una descrizione del cibo che si è ordinato. Da osservare che, dato lo sbilanciamento delle valutazioni a favore delle recensioni con valutazioni maggiore, parole usate per giudizi positivi risultano con più frequenza."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0fb126a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stars</th>\n",
       "      <th>useful</th>\n",
       "      <th>funny</th>\n",
       "      <th>cool</th>\n",
       "      <th>text</th>\n",
       "      <th>date</th>\n",
       "      <th>textLength</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Apparently Prides Osteria had a rough summer a...</td>\n",
       "      <td>2014-10-11 03:34:02</td>\n",
       "      <td>1856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>This store is pretty good. Not as great as Wal...</td>\n",
       "      <td>2015-07-03 20:38:25</td>\n",
       "      <td>701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>I called WVM on the recommendation of a couple...</td>\n",
       "      <td>2013-05-28 20:38:06</td>\n",
       "      <td>578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>I've stayed at many Marriott and Renaissance M...</td>\n",
       "      <td>2010-01-08 02:29:15</td>\n",
       "      <td>390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>The food is always great here. The service fro...</td>\n",
       "      <td>2011-07-28 18:05:01</td>\n",
       "      <td>181</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   stars  useful  funny  cool  \\\n",
       "0    4.0       3      1     1   \n",
       "1    4.0       1      0     0   \n",
       "2    5.0       0      0     0   \n",
       "3    2.0       1      1     1   \n",
       "4    4.0       0      0     0   \n",
       "\n",
       "                                                text                date  \\\n",
       "0  Apparently Prides Osteria had a rough summer a... 2014-10-11 03:34:02   \n",
       "1  This store is pretty good. Not as great as Wal... 2015-07-03 20:38:25   \n",
       "2  I called WVM on the recommendation of a couple... 2013-05-28 20:38:06   \n",
       "3  I've stayed at many Marriott and Renaissance M... 2010-01-08 02:29:15   \n",
       "4  The food is always great here. The service fro... 2011-07-28 18:05:01   \n",
       "\n",
       "   textLength  \n",
       "0        1856  \n",
       "1         701  \n",
       "2         578  \n",
       "3         390  \n",
       "4         181  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c51cee57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1e8186be0>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x216 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Differenziazione della lunghezza dei testi in relazione alla valutazione data a stars\n",
    "graph = sns.FacetGrid(data=df,col='stars')\n",
    "graph.map(plt.hist,'textLength',bins=50,color='blue')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc785fb3",
   "metadata": {},
   "source": [
    "## 3. Data Pre-processing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2df9d4e",
   "metadata": {},
   "source": [
    "La procedura di data pre-processing sarà utilizzata per la divisione delle valutazioni secondo una classificazione binaria (stars <= 3 per review negativa, positiva altrimenti). Durante tale fase, ci siamo concentrati principalmente sulla manipolazione del testo, nello specifico abbiamo ridotto la diversificazione delle parole andando a rimuovere segni di punteggiatura, stopwords e forme alternative. Infine, abbiamo utilizzato un tokenizer in grado di poter effettuare una conversione in valori numerici (stemmizzazione) dato che, trattandosi di deep learning, il calcolo relativo alle funzioni di attivazione e del processing interno di una rete si basa esclusivamente su valori di natura numerica. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40b587a0",
   "metadata": {},
   "source": [
    "### 3.1 Rimozione colonne inutilizzate e valori nulli"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "971f53e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# cancellazione delle caratteristiche cool, funny, useful e textLength poichè non hanno correlazioni con stars.\n",
    "df = df.drop(['cool', 'funny', 'useful', 'textLength'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3f634de5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stars</th>\n",
       "      <th>text</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.0</td>\n",
       "      <td>Apparently Prides Osteria had a rough summer a...</td>\n",
       "      <td>2014-10-11 03:34:02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.0</td>\n",
       "      <td>This store is pretty good. Not as great as Wal...</td>\n",
       "      <td>2015-07-03 20:38:25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.0</td>\n",
       "      <td>I called WVM on the recommendation of a couple...</td>\n",
       "      <td>2013-05-28 20:38:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.0</td>\n",
       "      <td>I've stayed at many Marriott and Renaissance M...</td>\n",
       "      <td>2010-01-08 02:29:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.0</td>\n",
       "      <td>The food is always great here. The service fro...</td>\n",
       "      <td>2011-07-28 18:05:01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   stars                                               text  \\\n",
       "0    4.0  Apparently Prides Osteria had a rough summer a...   \n",
       "1    4.0  This store is pretty good. Not as great as Wal...   \n",
       "2    5.0  I called WVM on the recommendation of a couple...   \n",
       "3    2.0  I've stayed at many Marriott and Renaissance M...   \n",
       "4    4.0  The food is always great here. The service fro...   \n",
       "\n",
       "                 date  \n",
       "0 2014-10-11 03:34:02  \n",
       "1 2015-07-03 20:38:25  \n",
       "2 2013-05-28 20:38:06  \n",
       "3 2010-01-08 02:29:15  \n",
       "4 2011-07-28 18:05:01  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5a24dbc3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# rimozione di possibili testi vuoti\n",
    "df['text'].dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09dd3d5f",
   "metadata": {},
   "source": [
    "### 3.2 Riduzione dei testi in lowercase"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b0549018",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ridurre la forma delle parole in minuscolo\n",
    "df['text'] = [review_text.lower() for review_text in df['text']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "593189b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    apparently prides osteria had a rough summer a...\n",
       "1    this store is pretty good. not as great as wal...\n",
       "2    i called wvm on the recommendation of a couple...\n",
       "3    i've stayed at many marriott and renaissance m...\n",
       "4    the food is always great here. the service fro...\n",
       "Name: text, dtype: object"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['text'].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7b54a60",
   "metadata": {},
   "source": [
    "### 3.3 Polarizzazione dei labels (stars) e bilanciamento del dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2a393a26",
   "metadata": {},
   "outputs": [],
   "source": [
    "# polarizzazione delle valutazioni a stars in due categorie: 1 = positiva, 0 = negativa\n",
    "\n",
    "# isoliamo la colonna di testo del dataframe in texts\n",
    "texts =  df['text']\n",
    "\n",
    "# andiamo ad impostare negative tutte le recensioni con 3 o meno stelle e positive quelle con 4 e 5 stelle.\n",
    "stars = [0 if star <= 3.0 else 1 for star in df['stars']]\n",
    "\n",
    "balancedTexts = [] # rappresenta la collezione di testi presi in considerazione dal dataframe di input\n",
    "balancedLabels = [] # rappresenta il nuovo valore polarizzato assegnato all'entry (0,1)\n",
    "\n",
    "# andiamo a bilanciare il dataset andando a dividere recensioni positive e negative con limite di 1.000.000 per categoria\n",
    "limit = 100000  \n",
    "\n",
    "# posizione 0 per conteggio di recensioni negative, posizione 1 per quelle positive\n",
    "negPosCounts = [0, 0] \n",
    "\n",
    "for i in range(0,len(texts)):\n",
    "    polarity = stars[i]\n",
    "    if negPosCounts[polarity] < limit: # se non si è raggiunto il limite per la categoria di polarizzazione\n",
    "        balancedTexts.append(texts[i])\n",
    "        balancedLabels.append(stars[i])\n",
    "        negPosCounts[polarity] += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "fd735018",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>apparently prides osteria had a rough summer a...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>this store is pretty good. not as great as wal...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>i called wvm on the recommendation of a couple...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>i've stayed at many marriott and renaissance m...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>the food is always great here. the service fro...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                text  labels\n",
       "0  apparently prides osteria had a rough summer a...       1\n",
       "1  this store is pretty good. not as great as wal...       1\n",
       "2  i called wvm on the recommendation of a couple...       1\n",
       "3  i've stayed at many marriott and renaissance m...       0\n",
       "4  the food is always great here. the service fro...       1"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_balanced = pd.DataFrame()\n",
    "df_balanced['text'] = balancedTexts\n",
    "df_balanced['labels'] = balancedLabels\n",
    "df_balanced.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b11e8cb1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ci sono 100000 recensioni positive e 100000 recensioni negative\n"
     ]
    }
   ],
   "source": [
    "# verifica del conteggio\n",
    "counter = Counter(df_balanced['labels'])\n",
    "print(f'Ci sono {counter[1]} recensioni positive e {counter[0]} recensioni negative')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1390066f",
   "metadata": {},
   "source": [
    "### 3.3 Lemmatizzazione"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "13106c92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "apparently prides osteria had a rough summer as evidenced by the almost empty dining room at 6:30 on a friday night. however new blood in the kitchen seems to have revitalized the food from other customers recent visits. waitstaff was warm but unobtrusive. by 8 pm or so when we left the bar was full and the dining room was much more lively than it had been. perhaps beverly residents prefer a later seating. \n",
      "\n",
      "after reading the mixed reviews of late i was a little tentative over our choice but luckily there was nothing to worry about in the food department. we started with the fried dough, burrata and prosciutto which were all lovely. then although they don't offer half portions of pasta we each ordered the entree size and split them. we chose the tagliatelle bolognese and a four cheese filled pasta in a creamy sauce with bacon, asparagus and grana frita. both were very good. we split a secondi which was the special berkshire pork secreto, which was described as a pork skirt steak with garlic potato purée and romanesco broccoli (incorrectly described as a romanesco sauce). some tables received bread before the meal but for some reason we did not. \n",
      "\n",
      "management also seems capable for when the tenants in the apartment above began playing basketball she intervened and also comped the tables a dessert. we ordered the apple dumpling with gelato and it was also quite tasty. portions are not huge which i particularly like because i prefer to order courses. if you are someone who orders just a meal you may leave hungry depending on you appetite. dining room was mostly younger crowd while the bar was definitely the over 40 set. would recommend that the naysayers return to see the improvement although i personally don't know the former glory to be able to compare. easy access to downtown salem without the crowds on this month of october.\n",
      "\n",
      "\n",
      "apparently pride osteria have a rough summer as evidence by the almost empty dining room at 6:30 on a friday night . however new blood in the kitchen seem to have revitalize the food from other customer recent visit . waitstaff be warm but unobtrusive . by 8 pm or so when we leave the bar be full and the dining room be much more lively than it have be . perhaps beverly resident prefer a later seating . after read the mixed review of late i be a little tentative over our choice but luckily there be nothing to worry about in the food department . we start with the fried dough , burrata and prosciutto which be all lovely . then although they do n't offer half portion of pasta we each order the entree size and split them . we choose the tagliatelle bolognese and a four cheese fill pasta in a creamy sauce with bacon , asparagus and grana frita . both be very good . we split a secondo which be the special berkshire pork secreto , which be describe as a pork skirt steak with garlic potato purée and romanesco broccoli ( incorrectly describe as a romanesco sauce ) . some table receive bread before the meal but for some reason we do not . management also seem capable for when the tenant in the apartment above begin play basketball she intervene and also comped the table a dessert . we order the apple dumpling with gelato and it be also quite tasty . portion be not huge which i particularly like because i prefer to order course . if you be someone who order just a meal you may leave hungry depend on you appetite . din room be mostly young crowd while the bar be definitely the over 40 set . would recommend that the naysayer return to see the improvement although i personally do n't know the former glory to be able to compare . easy access to downtown salem without the crowd on this month of october .\n",
      "CPU times: user 15min 7s, sys: 7.85 s, total: 15min 15s\n",
      "Wall time: 15min 16s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "# creazione del lemmatizer\n",
    "lemmatizer = WordNetLemmatizer()\n",
    "\n",
    "# funzione per l'aggiunta del tag semantico che evidenzia il tipo di parola da dover selezionare\n",
    "def word_tagger(nltk_tag):\n",
    "    if nltk_tag.startswith('J'):\n",
    "        return wordnet.ADJ\n",
    "    elif nltk_tag.startswith('V'):\n",
    "        return wordnet.VERB\n",
    "    elif nltk_tag.startswith('N'):\n",
    "        return wordnet.NOUN\n",
    "    elif nltk_tag.startswith('R'):\n",
    "        return wordnet.ADV\n",
    "    else:         \n",
    "        return None\n",
    "\n",
    "\n",
    "# elaborazione sui testi del dataset\n",
    "texts = df_balanced['text']\n",
    "df_texts = []\n",
    "for text in texts:\n",
    "    # tokenizzazione del text per l'aggiunta dei tag\n",
    "    word_tagged = nltk.pos_tag(nltk.word_tokenize(text))\n",
    "    # mapping parole:tag del testo analizzato\n",
    "    map_word_tag = list(map(lambda x: (x[0], word_tagger(x[1])), word_tagged))\n",
    "    # costruzione del testo lemmatizzato\n",
    "    lemmatized_text = []\n",
    "    for word, tag in map_word_tag:\n",
    "        if tag is None:\n",
    "            # elemento non tokenizzabile\n",
    "            lemmatized_text.append(word)\n",
    "        else:\n",
    "            # lemmmatizzazione della parola in relazione al \n",
    "            # tipo di elemento\n",
    "            lemmatized_text.append(lemmatizer.lemmatize(word, tag))\n",
    "    # aggiunta della parola post-lemmatizzazione al testo selezionato\n",
    "    lemmatized_text = \" \".join(lemmatized_text)\n",
    "    # aggiunta del testo nella collezione dei testi lemmatizzati\n",
    "    df_texts.append(lemmatized_text)\n",
    "\n",
    "print(texts[0] + \"\\n\\n\")\n",
    "print(df_texts[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b19e9428",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_balanced['text'] = df_texts"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43c9a2b4",
   "metadata": {},
   "source": [
    "### 3.4 Rimozione delle stop words e di caratteri non alfanumerici"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d7c06e4c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "frozenset({'might', 'never', 'whenever', 'bill', 'due', 'beside', 'too', 'call', 'at', 'cry', 'had', 'himself', 'namely', 'mostly', 'seemed', 'now', 'hers', 'still', 'hence', 'nowhere', 'was', 'first', 'unless', 'detail', 'five', 'thus', 'thin', 'next', 'find', 'yourselves', 'hereby', 'same', 'twelve', 'couldnt', 'that', 'perhaps', 'yet', 'co', 'less', 'with', 'we', 'fill', 'con', 'whereupon', 'again', 'see', 'otherwise', 'under', 'really', 'they', 'afterwards', 'is', 'moreover', 'amoungst', 'because', 'by', 'each', 'found', 'hasnt', 'only', 'top', 'mill', 'just', 'when', 'keep', 'inc', 'nor', 'become', 'do', 'also', 'myself', 'ever', 'former', 'whatever', 'while', 'hereupon', 'move', 'something', 'am', 'using', 'further', 'fifty', 'has', 'ltd', 'must', 'two', 'against', 'any', 'meanwhile', 'ie', 'her', 'another', 'show', 'those', 'up', 'what', 'etc', 'are', 'latter', 'not', 'done', 'whither', 'name', 'front', 'among', 'three', 'you', 'an', 'own', 'been', 'or', 'where', 'amount', 'sometime', 'four', 'take', 'whole', 'becomes', 'until', 'other', 'get', 'through', 'quite', 'once', 'me', 'without', 'sincere', 'much', 'she', 'all', 'would', 'he', 'towards', 'though', 'off', 'make', 'have', 'which', 'their', 'eight', 'may', 'upon', 'since', 'a', 'latterly', 'and', 'kg', 'however', 'doesn', 'seem', 'forty', 'whereby', 'often', 'anyhow', 'both', 'over', 'together', 'part', 'him', 'beyond', 'did', 'thru', 'always', 'how', 'toward', 'my', 'became', 'made', 'herein', 'thereby', 'empty', 'mine', 'ourselves', 'your', 'sixty', 'whose', 'several', 'cant', 'computer', 'doing', 'besides', 'then', 'side', 'therefore', 'indeed', 'fire', 'between', 'via', 'almost', 'anyway', 'us', 'i', 'his', 'yours', 'from', 'therein', 'everyone', 'more', 'than', 'very', 'such', 'of', 'it', 'de', 'could', 'put', 'nobody', 'there', 'nothing', 'thick', 'here', 'everything', 'per', 'whether', 'across', 'alone', 'even', 'describe', 'please', 'many', 'along', 'thereafter', 'cannot', 'either', 'before', 'noone', 'during', 'already', 'none', 'don', 'below', 'every', 'one', 'somehow', 'these', 'some', 'regarding', 'system', 'eg', 'within', 'our', 'seems', 'on', 'but', 'somewhere', 'whence', 'most', 'should', 'except', 'well', 'anything', 'twenty', 'hereafter', 'about', 'eleven', 'yourself', 'herself', 'out', 'nevertheless', 'seeming', 'although', 'third', 'go', 'will', 'few', 'least', 'behind', 'down', 'wherein', 'whereafter', 'does', 'say', 'this', 'thence', 'serious', 'being', 'everywhere', 'didn', 'so', 'six', 'themselves', 'throughout', 'fifteen', 'someone', 'back', 'onto', 'can', 'km', 'if', 'neither', 'enough', 'wherever', 'its', 'interest', 'anywhere', 'various', 'as', 'above', 'in', 'sometimes', 'itself', 'ten', 'the', 'anyone', 'used', 'no', 'be', 'rather', 'un', 'full', 'elsewhere', 'after', 'ours', 're', 'why', 'thereupon', 'amongst', 'whom', 'around', 'give', 'others', 'to', 'else', 'hundred', 'nine', 'bottom', 'last', 'formerly', 'them', 'were', 'beforehand', 'whoever', 'who', 'whereas', 'becoming', 'for', 'into'})\n"
     ]
    }
   ],
   "source": [
    "# Stop words da rimuovere\n",
    "print(gensim.parsing.preprocessing.STOPWORDS)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c5d93279",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Rimozione delle stop words\n",
    "df_texts = []\n",
    "for text in df_balanced['text']:\n",
    "    df_texts.append(remove_stopwords(text))\n",
    "\n",
    "df_balanced['text'] = df_texts\n",
    "\n",
    "# Rimozione dei caratteri non alfanumerici\n",
    "df_texts = []\n",
    "for text in df_balanced['text']:\n",
    "    df_texts.append(''.join(ch for ch in text if ch.isalnum() or ch == ' '))\n",
    "\n",
    "df_balanced['text'] = df_texts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "ad80eab7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0         apparently pride osteria rough summer evidence...\n",
      "1         store pretty good  great walmart  preferred  m...\n",
      "2         wvm recommendation couple friend use past thin...\n",
      "3         ve stay marriott renaissance marriott s huge d...\n",
      "4         food great  service manager staff super  draw ...\n",
      "                                ...                        \n",
      "199995    s okay place  crowd friday saturday  music mix...\n",
      "199996    order wing  fry website  account use   wait ho...\n",
      "199997    location easy  din area small  customer servic...\n",
      "199998    m realtor client year pretty happy service yea...\n",
      "199999     place specialize fish taco  dull fish taco  wtf \n",
      "Name: text, Length: 200000, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(df_balanced['text'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a89c9c97",
   "metadata": {},
   "source": [
    "### 3.5 Text Tokenization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "381069a9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 43.6 s, sys: 2.2 s, total: 45.8 s\n",
      "Wall time: 47.5 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "# tokenizzazione del testo andando a dividere le stringhe in una lista di lemmi\n",
    "df_balanced['text'] = [nltk.word_tokenize(text) for text in df_balanced['text']]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cff653e0",
   "metadata": {},
   "source": [
    "### 3.6 Preparazione Dati Vettoriali per la Fase di Modelling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "fb23c27e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 132062 different words\n"
     ]
    }
   ],
   "source": [
    "# definire il numero di parole da passare all'oggetto Tokenizer\n",
    "# bisogna analizzare la quantità di parole che si ha nel dataframe selezionato\n",
    "map_terms = dict()\n",
    "for text in df_balanced['text']:\n",
    "    for word in text:\n",
    "        if word not in map_terms:\n",
    "            map_terms[word] = 1\n",
    "\n",
    "print(f'There are {len(map_terms)} different words') # number of words"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "6637a1b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 11.5 s, sys: 138 ms, total: 11.6 s\n",
      "Wall time: 11.7 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "# definizione di un tokenizer delle prime 10.000 parole più utilizzate\n",
    "tokenizer = Tokenizer(num_words=13206)\n",
    "tokenizer.fit_on_texts(df_balanced['text'])\n",
    "# trasformazione della sequenza di lemmi in sequenze di interi in modo da valutare più velocemente le parole\n",
    "sequences = tokenizer.texts_to_sequences(df_balanced['text'])\n",
    "# Sequenze di massimo 200 unità. Se vi sono testi con sequenze più lunghe esse vengono troncate, altrimenti si avrà \n",
    "# un riempimenti di 0 per testi undersized.\n",
    "text_sequence = pad_sequences(sequences, maxlen=200)\n",
    "labels = np.array(df_balanced['labels'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "e66db667",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'nt': 1, 's': 2, 'good': 3, 'food': 4, 'place': 5, 'time': 6, 'like': 7, 'great': 8, 'order': 9, 'come': 10, 'service': 11, 'try': 12, 've': 13, 'wait': 14, 'look': 15, 'restaurant': 16, 'want': 17, 'nice': 18, 'm': 19, 'love': 20, 'price': 21, 'ask': 22, 'know': 23, 'think': 24, 'eat': 25, 'tell': 26, 'staff': 27, 'day': 28, 'people': 29, 'little': 30, 'best': 31, 'drink': 32, 'experience': 33, 'chicken': 34, 'bad': 35, 'work': 36, 'table': 37, 'thing': 38, 'menu': 39, 'pretty': 40, 'minute': 41, 'need': 42, 'friendly': 43, 'taste': 44, 'way': 45, 'definitely': 46, 'friend': 47, 'bar': 48, 'night': 49, 'delicious': 50}\n"
     ]
    }
   ],
   "source": [
    "# check parziale degli indici delle parole \n",
    "word_index = tokenizer.word_index\n",
    "# prendiamo le prime 50 parole indicizzate\n",
    "check = {key: value for key, value in word_index.items() if value <= 50}\n",
    "print(check)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d896f003",
   "metadata": {},
   "source": [
    "Il vettore dei valori numerici ha un dominio pari a 20.000 parole differenti tra le 132.062 parole totali. Si andrà, quindi, a selezionare 1/6 delle parole presenti nelle reviews che, però, ha una rilevanza maggiore rispetto ai 5/6 restanti poichè hanno occorrenze maggiori. Inoltre, la sequenza ordinata creata andrà a seguire l'ordine di occorenza dei termini all'interno dei testi di 300 parole (grandezza massima)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0285bbcc",
   "metadata": {},
   "source": [
    "## 4. Modelling"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7de35bd",
   "metadata": {},
   "source": [
    "In questa fase è possibile trovare modelli alternativi utilizzati oggigiorno nel campo NLP. Nello specifico, si propone una triplice alternativa che vede l'utilizzo di un modello basato su LSTM, un modello di convulational neural network che va a supporto di LSTM e, infine, un modello di LSTM bidirezionale. Possiamo affermare che tutti i modelli hanno raggiunto un livello di precisione accettabile; ciò non toglie che vi possano essere vari miglioramenti che possano incrementarne le prestazioni."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3dbcc790",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['-I/usr/local/lib/python3.9/site-packages/tensorflow/include', '-D_GLIBCXX_USE_CXX11_ABI=0', '-DEIGEN_MAX_ALIGN_BYTES=64']\n",
      "2.6.0\n"
     ]
    }
   ],
   "source": [
    "# checking sulle compile flags di tensorflow\n",
    "print(tf.sysconfig.get_compile_flags())\n",
    "print(tf.__version__)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "2c41c099",
   "metadata": {},
   "outputs": [],
   "source": [
    "# gestione del callbacks\n",
    "# creazione del F-Score sul validation e training set\n",
    "class F1History(tf.keras.callbacks.Callback):\n",
    "\n",
    "    def __init__(self, train, validation=None):\n",
    "        super(F1History, self).__init__()\n",
    "        self.validation = validation\n",
    "        self.train = train\n",
    "\n",
    "    # stampa dei valori di F1-Score alla fine di ogni epoch\n",
    "    def on_epoch_end(self, epoch, logs={}):\n",
    "\n",
    "        logs['f1_score_train'] = float('-inf')\n",
    "        X_train, y_train = self.train[0], self.train[1]\n",
    "        y_pred = (self.model.predict(X_train).ravel()>0.5)+0\n",
    "\n",
    "        if (self.validation):\n",
    "            logs['f1_score_val'] = float('-inf')\n",
    "            X_valid, y_valid = self.validation[0], self.validation[1]\n",
    "            y_val_pred = (self.model.predict(X_valid).ravel()>0.5)+0\n",
    "            val_score = f1_score(y_valid, y_val_pred)\n",
    "            logs['f1_score_train'] = np.round(score, 5)\n",
    "            logs['f1_score_val'] = np.round(val_score, 5)\n",
    "        else:\n",
    "            logs['f1_score_train'] = np.round(score, 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "30c0ff54",
   "metadata": {},
   "outputs": [],
   "source": [
    "# early stopping\n",
    "es_callback = keras.callbacks.EarlyStopping(monitor='val_loss', patience=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "4176dd66",
   "metadata": {},
   "outputs": [],
   "source": [
    "# train and test splitting\n",
    "x_train, x_test, y_train, y_test = train_test_split(text_sequence , labels ,random_state=520, test_size=0.33, shuffle=True)\n",
    "\n",
    "# train and validation splitting\n",
    "x_train, x_val, y_train, y_val = train_test_split(\n",
    "    x_train, y_train, test_size=0.33, random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "cd17eb30",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "89780\n",
      "44220\n",
      "66000\n"
     ]
    }
   ],
   "source": [
    "print(len(x_train))\n",
    "print(len(x_val))\n",
    "print(len(x_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1981654f",
   "metadata": {},
   "source": [
    "### 4.1 Modello basato su LSTM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "f2650a32",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_14\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "embedding_14 (Embedding)     (None, 200, 64)           845184    \n",
      "_________________________________________________________________\n",
      "dropout_24 (Dropout)         (None, 200, 64)           0         \n",
      "_________________________________________________________________\n",
      "lstm_5 (LSTM)                (None, 64)                33024     \n",
      "_________________________________________________________________\n",
      "dropout_25 (Dropout)         (None, 64)                0         \n",
      "_________________________________________________________________\n",
      "dense_23 (Dense)             (None, 1)                 65        \n",
      "=================================================================\n",
      "Total params: 878,273\n",
      "Trainable params: 878,273\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "# creazione di un modello sequenziale vuoto in cui aggiungere i vari layers\n",
    "model_lstm = keras.Sequential()\n",
    "\n",
    "# aggiunta dei layers\n",
    "model_lstm.add(layers.Embedding(13206, 64, \n",
    "                                input_length=200))\n",
    "model_lstm.add(layers.Dropout(0.4))\n",
    "model_lstm.add(layers.LSTM(64, \n",
    "                           dropout=0.2, \n",
    "                           recurrent_dropout=0.2));\n",
    "model_lstm.add(layers.Dropout(0.4))\n",
    "model_lstm.add(layers.Dense(1, activation='sigmoid'));\n",
    "\n",
    "model_lstm.compile(\n",
    "    loss='binary_crossentropy', \n",
    "    optimizer='adam', \n",
    "    metrics=['accuracy'])\n",
    "\n",
    "model_lstm.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "aeb406e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/3\n",
      "2806/2806 [==============================] - 504s 179ms/step - loss: 0.3589 - accuracy: 0.8455 - val_loss: 0.3042 - val_accuracy: 0.8689\n",
      "Epoch 2/3\n",
      "2806/2806 [==============================] - 474s 169ms/step - loss: 0.2921 - accuracy: 0.8782 - val_loss: 0.3027 - val_accuracy: 0.8707\n",
      "Epoch 3/3\n",
      "2806/2806 [==============================] - 513s 183ms/step - loss: 0.2643 - accuracy: 0.8901 - val_loss: 0.2985 - val_accuracy: 0.8690\n"
     ]
    }
   ],
   "source": [
    "results_lstm = model_lstm.fit(x_train, y_train, epochs=3, validation_data=(x_val, y_val), callbacks=[F1History(train=(x_train,y_train),validation=(x_val,y_val)), es_callback])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "2791e52c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2063/2063 [==============================] - 34s 16ms/step - loss: 0.3068 - accuracy: 0.8669\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.30677175521850586, 0.8669090867042542]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_lstm.evaluate(x_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "024fdafd",
   "metadata": {},
   "source": [
    "modelLSTM.evaluate(xTest, yTest)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "495a67ee",
   "metadata": {},
   "source": [
    "### 4.2 Modello basato su CNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "1891b39d",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_12\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "embedding_12 (Embedding)     (None, 200, 64)           845184    \n",
      "_________________________________________________________________\n",
      "dropout_19 (Dropout)         (None, 200, 64)           0         \n",
      "_________________________________________________________________\n",
      "conv1d_8 (Conv1D)            (None, 197, 64)           16448     \n",
      "_________________________________________________________________\n",
      "max_pooling1d_8 (MaxPooling1 (None, 49, 64)            0         \n",
      "_________________________________________________________________\n",
      "flatten_6 (Flatten)          (None, 3136)              0         \n",
      "_________________________________________________________________\n",
      "dropout_20 (Dropout)         (None, 3136)              0         \n",
      "_________________________________________________________________\n",
      "dense_20 (Dense)             (None, 64)                200768    \n",
      "_________________________________________________________________\n",
      "dropout_21 (Dropout)         (None, 64)                0         \n",
      "_________________________________________________________________\n",
      "dense_21 (Dense)             (None, 1)                 65        \n",
      "=================================================================\n",
      "Total params: 1,062,465\n",
      "Trainable params: 1,062,465\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model_cnn = keras.Sequential()\n",
    "model_cnn.add(layers.Embedding(13206, 64, input_length=200)) #layer iniziali \n",
    "model_cnn.add(layers.Dropout(0.4)) # layer di dropout esterno in seguito ad Embedding\n",
    "model_cnn.add(layers.Conv1D(64,\n",
    "                        4,\n",
    "                        activation='relu'))\n",
    "model_cnn.add(layers.MaxPooling1D(pool_size=4))\n",
    "model_cnn.add(layers.Flatten())\n",
    "model_cnn.add(layers.Dropout(0.4))\n",
    "model_cnn.add(layers.Dense(64, activation='relu'))\n",
    "model_cnn.add(layers.Dropout(0.4))\n",
    "model_cnn.add(layers.Dense(1, activation='sigmoid'))\n",
    "\n",
    "\n",
    "model_cnn.compile(\n",
    "    loss='binary_crossentropy', \n",
    "    optimizer='adam', \n",
    "    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "\n",
    "model_cnn.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "4c044609",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/3\n",
      "2806/2806 [==============================] - 56s 20ms/step - loss: 0.1876 - accuracy: 0.9234 - val_loss: 0.3693 - val_accuracy: 0.8605\n",
      "Epoch 2/3\n",
      "2806/2806 [==============================] - 56s 20ms/step - loss: 0.1713 - accuracy: 0.9307 - val_loss: 0.4060 - val_accuracy: 0.8566\n",
      "Epoch 3/3\n",
      "2806/2806 [==============================] - 56s 20ms/step - loss: 0.1578 - accuracy: 0.9351 - val_loss: 0.4492 - val_accuracy: 0.8539\n"
     ]
    }
   ],
   "source": [
    "results_cnn = model_cnn.fit(x_train, y_train, epochs=3, validation_data=(x_val, y_val), callbacks=[F1History(train=(x_train,y_train),validation=(x_val,y_val)), es_callback])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "d6d38370",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2063/2063 [==============================] - 4s 2ms/step - loss: 0.4535 - accuracy: 0.8520\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.45354142785072327, 0.8520151376724243]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn.evaluate(x_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3892c2b6",
   "metadata": {},
   "source": [
    "### 4.1.1 Modello basato CNN + LSTM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "d02543de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_16\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "embedding_16 (Embedding)     (None, 200, 64)           845184    \n",
      "_________________________________________________________________\n",
      "dropout_29 (Dropout)         (None, 200, 64)           0         \n",
      "_________________________________________________________________\n",
      "conv1d_10 (Conv1D)           (None, 197, 64)           16448     \n",
      "_________________________________________________________________\n",
      "max_pooling1d_10 (MaxPooling (None, 49, 64)            0         \n",
      "_________________________________________________________________\n",
      "dropout_30 (Dropout)         (None, 49, 64)            0         \n",
      "_________________________________________________________________\n",
      "lstm_7 (LSTM)                (None, 64)                33024     \n",
      "_________________________________________________________________\n",
      "dropout_31 (Dropout)         (None, 64)                0         \n",
      "_________________________________________________________________\n",
      "dense_25 (Dense)             (None, 1)                 65        \n",
      "=================================================================\n",
      "Total params: 894,721\n",
      "Trainable params: 894,721\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "# creazione di un modello sequenziale vuoto in cui aggiungere i vari layers\n",
    "model_lstm = keras.Sequential()\n",
    "\n",
    "# aggiunta dei layers\n",
    "model_lstm.add(layers.Embedding(13206, 64, input_length=200))\n",
    "model_lstm.add(layers.Dropout(0.25)) \n",
    "model_lstm.add(layers.Conv1D(64, \n",
    "                             4, \n",
    "                             activation='relu'))\n",
    "model_lstm.add(layers.MaxPooling1D(pool_size=4))\n",
    "model_lstm.add(layers.Dropout(0.4))\n",
    "model_lstm.add(layers.LSTM(64));\n",
    "model_lstm.add(layers.Dropout(0.4)) \n",
    "model_lstm.add(layers.Dense(1, activation='sigmoid')); \n",
    "\n",
    "model_lstm.compile(\n",
    "    loss='binary_crossentropy', \n",
    "    optimizer='adam',\n",
    "    metrics=['accuracy'])\n",
    "\n",
    "model_lstm.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "32db6b84",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/3\n",
      "2806/2806 [==============================] - 97s 34ms/step - loss: 0.3557 - accuracy: 0.8429 - val_loss: 0.3036 - val_accuracy: 0.8692\n",
      "Epoch 2/3\n",
      "2806/2806 [==============================] - 98s 35ms/step - loss: 0.2823 - accuracy: 0.8825 - val_loss: 0.3027 - val_accuracy: 0.8700\n",
      "Epoch 3/3\n",
      "2806/2806 [==============================] - 92s 33ms/step - loss: 0.2437 - accuracy: 0.8996 - val_loss: 0.3112 - val_accuracy: 0.8656\n"
     ]
    }
   ],
   "source": [
    "results_lstm = model_lstm.fit(x_train, y_train, validation_data=(x_val, y_val),epochs=3, callbacks=[F1History(train=(x_train,y_train),validation=(x_val,y_val))])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "37f0803f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2063/2063 [==============================] - 10s 5ms/step - loss: 0.3150 - accuracy: 0.8640\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.3149608075618744, 0.8639545440673828]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_lstm.evaluate(x_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d53c8e7",
   "metadata": {},
   "source": [
    "### 4.3 Modello CNN + biLSTM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "d7253c86",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_17\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "embedding_17 (Embedding)     (None, 200, 64)           845184    \n",
      "_________________________________________________________________\n",
      "dropout_32 (Dropout)         (None, 200, 64)           0         \n",
      "_________________________________________________________________\n",
      "conv1d_11 (Conv1D)           (None, 197, 64)           16448     \n",
      "_________________________________________________________________\n",
      "max_pooling1d_11 (MaxPooling (None, 49, 64)            0         \n",
      "_________________________________________________________________\n",
      "dropout_33 (Dropout)         (None, 49, 64)            0         \n",
      "_________________________________________________________________\n",
      "bidirectional (Bidirectional (None, 256)               197632    \n",
      "_________________________________________________________________\n",
      "dropout_34 (Dropout)         (None, 256)               0         \n",
      "_________________________________________________________________\n",
      "dense_26 (Dense)             (None, 1)                 257       \n",
      "=================================================================\n",
      "Total params: 1,059,521\n",
      "Trainable params: 1,059,521\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model_bid = keras.Sequential()\n",
    "model_bid.add(layers.Embedding(13206, 64, input_length=200))\n",
    "model_bid.add(layers.Dropout(0.4))\n",
    "model_bid.add(layers.Conv1D(64,\n",
    "                        4,\n",
    "                        activation='relu'))\n",
    "model_bid.add(layers.MaxPooling1D(pool_size=4))\n",
    "model_bid.add(layers.Dropout(0.4))\n",
    "model_bid.add(layers.Bidirectional(layers.LSTM(128)))\n",
    "model_bid.add(layers.Dropout(0.4))\n",
    "model_bid.add(layers.Dense(1, activation='sigmoid'))\n",
    "model_bid.compile(\n",
    "    loss='binary_crossentropy', \n",
    "    optimizer='adam', \n",
    "    metrics=['accuracy'])\n",
    "\n",
    "model_bid.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "d6ea821a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/3\n",
      "2806/2806 [==============================] - 168s 59ms/step - loss: 0.3552 - accuracy: 0.8428 - val_loss: 0.3043 - val_accuracy: 0.8680\n",
      "Epoch 2/3\n",
      "2806/2806 [==============================] - 166s 59ms/step - loss: 0.2892 - accuracy: 0.8779 - val_loss: 0.2981 - val_accuracy: 0.8711\n",
      "Epoch 3/3\n",
      "2806/2806 [==============================] - 165s 59ms/step - loss: 0.2581 - accuracy: 0.8920 - val_loss: 0.3112 - val_accuracy: 0.8684\n"
     ]
    }
   ],
   "source": [
    "results_bid = model_bid.fit(x_train, y_train, validation_data=(x_val, y_val), epochs=3, callbacks=[F1History(train=(x_train,y_train),validation=(x_val,y_val)), es_callback])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "272f09fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2063/2063 [==============================] - 28s 14ms/step - loss: 0.3182 - accuracy: 0.8658\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.31822991371154785, 0.8657575845718384]"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_bid.evaluate(x_test,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba29c919",
   "metadata": {},
   "source": [
    "## 5. Save Models"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93fbde99",
   "metadata": {},
   "source": [
    "Data l'eccessiva tempo speso per l'addestramento delle reti neurali proposte, abbiamo deciso di salvare tramite la libreria pickle le componenti e i modelli addestrati in modo da poterli rendere disponibili per l'analisi delle prestazioni e l'utilizzo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "010bbab0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "# salviamo il tokenizer e i modelli su file\n",
    "with open(\"dump/keras_tokenizer.pickle\", \"wb\") as f:\n",
    "    pickle.dump(tokenizer, f)\n",
    "    \n",
    "model_lstm.save(\"dump/model/yelp_model_lstm.hdf5\")\n",
    "model_cnn.save(\"dump/model/yelp_model_cnn.hdf5\")\n",
    "model_bid.save(\"dump/model/yelp_bidirectional_lstm.hdf5\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "f4a0eb30",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:6 out of the last 12569 calls to <function Model.make_predict_function.<locals>.predict_function at 0x29c324ca0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n",
      "Risultati modello LSTM:\n",
      " [[0.05765709]\n",
      " [0.89711237]\n",
      " [0.04066032]]\n",
      "\n",
      "Risultati modello CNN:\n",
      " [[0.0697552 ]\n",
      " [0.88013995]\n",
      " [0.01199266]]\n",
      "\n",
      "Risultati modello biLSTM:\n",
      " [[0.03416514]\n",
      " [0.93249893]\n",
      " [0.01644477]]\n",
      "\n",
      "Risultati modello combinato biLSTM + LSTM:\n",
      " [[0.05569908]\n",
      " [0.90850663]\n",
      " [0.01964512]]\n"
     ]
    }
   ],
   "source": [
    "# carichiamo il tokenizer e il modello da file\n",
    "with open(\"dump/keras_tokenizer.pickle\", \"rb\") as f:\n",
    "    tokenizer = pickle.load(f)\n",
    "\n",
    "# TODO: load other models\n",
    "model_lstm = load_model(\"dump/model/yelp_model_lstm.hdf5\")\n",
    "model_cnn = load_model(\"dump/model/yelp_model_cnn.hdf5\")\n",
    "model_bid = load_model(\"dump/model/yelp_bidirectional_lstm.hdf5\")\n",
    "\n",
    "# definiamo gli esempi su cui testare il modello\n",
    "examples_reviews = [\"slow orders but good food\", \"Delicious foods! Awesome!\", \"Bad food, bad people... horrible!\"]\n",
    "\n",
    "# usiamo il tokenizer per creare sequenze di interi da dare al modello\n",
    "sequences = tokenizer.texts_to_sequences(examples_reviews)\n",
    "data_examples = pad_sequences(sequences, maxlen=200)\n",
    "\n",
    "# effettuare le predizioni e stampare i risultati\n",
    "predictions_lstm = model_lstm.predict(data_examples)\n",
    "predictions_cnn = model_cnn.predict(data_examples)\n",
    "predictions_bid = model_bid.predict(data_examples)\n",
    "predictions_bid_lstm = model_bid_lstm.predict(data_examples)\n",
    "\n",
    "print(f\"Risultati modello CNN:\\n {predictions_cnn}\\n\\n\" + \n",
    "    f\"Risultati modello CNN+LSTM:\\n {predictions_lstm}\\n\\n\"+\n",
    "      f\"Risultati modello CNN+biLSTM:\\n {predictions_bid})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "e0881c38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# grafico di paragone per i valori della training accuracy tra i modelli proposti\n",
    "plt.plot(results_bid.history['accuracy'])\n",
    "plt.plot(results_cnn.history['accuracy'])\n",
    "plt.plot(results_lstm.history['accuracy'])\n",
    "plt.title('Analisi training accuracy dei modelli')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['CNN+biLSTM', 'CNN', 'CNN+LSTM', 'CNN+biLSTM+LSTM'], loc='best')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# grafico di paragone per i valori dell'accuracy in validazione\n",
    "plt.plot(results_bid.history['val_accuracy'])\n",
    "plt.plot(results_cnn.history['val_accuracy'])\n",
    "plt.plot(results_lstm.history['val_accuracy'])\n",
    "plt.title('Analisi validation accuracy dei modelli')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['CNN+biLSTM', 'CNN', 'CNN+LSTM'], loc='best')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "b16303df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# grafico di paragone per i valori della loss function tra i modelli proposti\n",
    "plt.plot(results_bid.history['loss'])\n",
    "plt.plot(results_cnn.history['loss'])\n",
    "plt.plot(results_lstm.history['loss'])\n",
    "plt.title('Analisi training loss dei modelli')\n",
    "plt.ylabel('Loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['CNN+biLSTM', 'CNN', 'CNN+LSTM'], loc='best')\n",
    "plt.show()\n",
    "\n",
    "# grafico di paragone per i valori della loss function tra i modelli proposti\n",
    "plt.plot(results_bid.history['val_loss'])\n",
    "plt.plot(results_cnn.history['val_loss'])\n",
    "plt.plot(results_lstm.history['val_loss'])\n",
    "plt.title('Analisi validation loss dei modelli')\n",
    "plt.ylabel('Loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['CNN+biLSTM', 'CNN', 'CNN+LSTM'], loc='best')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "36081a8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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Qxk6dCg7d+4kOTmZiRMnVjjP0KFDGTRoUJ3za5qIiA4w4ia45X346Tr47iNwNBve/Rn8sQ/Mux42vwvFhYHOqWkEfm3xUtUFuC6zvtt+5XN/EzC+mmNfxlVNVd6+Emj23zyqymWXXcaNN97I3LlzAVi7di379u2jS5cuPPXUU9xxxx2EhZ28ElxwcDDPP/88P/rRj6o9/5w5c9i5cyczZsyoU37uvPPOGvfPmzePjIwM1q1bR1BQEOnp6URGRrJs2bLy51u5ciVPP/10heNyc3NJS0uje/fubN68uU55MU1chx5w9i9g4n2Q8bXr2rvhDTdnVkQHGHiZmy+r+yhbhKqFsq4SwP+8s5FNGUca9JwDEmL49cUDq93/2WefERoaWuEL+8wzz2Tnzp3ExsYyfvx4XnjhBaZPn37SsT/72c944oknqtxXF3/4wx94//33iYiI4JVXXuGMM85gxowZREVFcd9991V5TGZmJvHx8QR5s68mJiZWma6yq666innz5nHffffx6quvMm3aNF566aVTyrdpYkSg23B3O/+3kPqZ69q75lXXJtIh2bWFnHmNa3w3LUage1W1Whs2bGDEiBHV7n/ggQf44x//SElJyUn7kpKSmDBhwil/Abdr147169dz11138bOf/axOx1x11VW88847DB06lHvvvZevv/66Tsddfvnl/Otf/wLgnXfe4eKLLz6lPJsmLjgEep8HVzwHv/gWvv+MCxxf/j/463CYNRmWzXRjR0yzZyUOqLFkECgpKSmMHj2aV155pcr9Dz30EJdeeinf+973yrfl5OQwebLrtXzgwAEKCwt5++23AXjppZcYPHgwANOmTSv/e88999QpP4mJiWzdupVPP/2UTz/9lMmTJ/P666+XP191OnXqRIcOHZg7dy79+/enbVubZK/FaxMNQ691tyMZ3iJUr8H7v4APHoIzznXjQ/pe6AYkmmbHAkeADBw48KQG6Mp++ctfcsUVV3DOOeectK93794MHTqU1157rXxbp06dWLNmDVBzG4dv19f6dINt06YNF154IRdeeCFdu3bl7bffrjVwAFx99dX8+Mc/Lm/gN61ITAKM/6m77d3guvaufx2++Q+0iXEj1IdcDT0m2CJUzYi9UwHy3e9+l4KCAmbOnFm+bd26daSlnRhs369fPwYMGMA777xT5Tkefvhh/vjHP9b7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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# grafico di paragone per i valori del F1-Score in validation\n",
    "plt.plot(results_bid.history['F1_score_val'])\n",
    "plt.plot(results_cnn.history['F1_score_val'])\n",
    "plt.plot(results_lstm.history['F1_score_val'])\n",
    "plt.title('Analisi F1 Score sul validation set nei modelli')\n",
    "plt.ylabel('F1 Score')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['CNN+biLSTM', 'CNN', 'CNN+LSTM'], loc='best')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8cb02d2c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
